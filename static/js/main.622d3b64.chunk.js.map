{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","width","height","src","concat","Identicon","toString","Component","Main","_this","role","style","maxWidth","onSubmit","event","preventDefault","content","postContent","value","createPost","type","ref","input","placeholder","required","posts","map","post","key","author","window","web3","utils","fromWei","tipAmount","name","onClick","toWei","console","log","tipPost","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","socialNetwork","postCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","SocialNetwork","networks","Contract","abi","address","methods","i","toConsumableArray","sort","b","_this2","send","from","once","receipt","_this3","components_Navbar","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uw9EAqCeA,mLA/BX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kEACbH,EAAAC,EAAAC,cAAA,KACEC,UAAU,sCACVC,KAAK,yCACLC,OAAO,SACPC,IAAI,uBAJN,mBAQAN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oDACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SAAOK,GAAG,WAAWC,KAAKC,MAAMC,UAEhCF,KAAKC,MAAMC,QACTV,EAAAC,EAAAC,cAAA,OACAC,UAAU,OACVQ,MAAM,KACNC,OAAO,KACPC,IAAG,yBAAAC,OAA2B,IAAIC,IAAUP,KAAKC,MAAMC,QAAS,IAAIM,cAEpEhB,EAAAC,EAAAC,cAAA,uBAzBKe,aCsENC,mLApEJ,IAAAC,EAAAX,KACP,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMkB,KAAK,OAAOjB,UAAU,4BAA4BkB,MAAO,CAAEC,SAAU,UACzEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,iBACEF,EAAAC,EAAAC,cAAA,QAAMqB,SAAU,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAUP,EAAKQ,YAAYC,MACjCT,EAAKV,MAAMoB,WAAWH,KAExB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SACEK,GAAG,cACHuB,KAAK,OACLC,IAAK,SAACC,GAAYb,EAAKQ,YAAcK,GACrC7B,UAAU,eACV8B,YAAY,uBACZC,UAAQ,KAEZlC,EAAAC,EAAAC,cAAA,UAAQ4B,KAAK,SAAS3B,UAAU,6BAAhC,UAEFH,EAAAC,EAAAC,cAAA,iBACEM,KAAKC,MAAM0B,MAAMC,IAAI,SAACC,EAAMC,GAC5B,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYmC,IAAKA,GAC9BtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVQ,MAAM,KACNC,OAAO,KACPC,IAAG,yBAAAC,OAA2B,IAAIC,IAAUsB,EAAKE,OAAQ,IAAIvB,cAE/DhB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAckC,EAAKE,SAEtCvC,EAAAC,EAAAC,cAAA,MAAIK,GAAG,WAAWJ,UAAU,+BAC1BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,SAAImC,EAAKX,UAEX1B,EAAAC,EAAAC,cAAA,MAAIoC,IAAKA,EAAKnC,UAAU,wBACtBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8BAAjB,SACSqC,OAAOC,KAAKC,MAAMC,QAAQN,EAAKO,UAAU5B,WAAY,SAD9D,QAGAhB,EAAAC,EAAAC,cAAA,UACEC,UAAU,uCACV0C,KAAMR,EAAK9B,GACXuC,QAAS,SAACtB,GACR,IAAIoB,EAAYJ,OAAOC,KAAKC,MAAMK,MAAM,MAAO,SAC/CC,QAAQC,IAAIzB,EAAMnB,OAAOwC,KAAMD,GAC/BzB,EAAKV,MAAMyC,QAAQ1B,EAAMnB,OAAOwC,KAAMD,KAN1C,+BA9CL3B,aCsGJkC,cA/Bb,SAAAA,EAAY1C,GAAO,IAAAU,EAAA,OAAAiC,OAAAC,EAAA,EAAAD,CAAA5C,KAAA2C,IACjBhC,EAAAiC,OAAAE,EAAA,EAAAF,CAAA5C,KAAA4C,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhD,KAAMC,KACDgD,MAAQ,CACX/C,QAAS,GACTgD,cAAe,KACfC,UAAW,EACXxB,MAAO,GACPyB,SAAS,GAGXzC,EAAKU,WAAaV,EAAKU,WAAWgC,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAjC,KAClBA,EAAK+B,QAAU/B,EAAK+B,QAAQW,KAAbT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAjC,KAXEA,4MA/DXX,KAAKuD,kCACLvD,KAAKwD,sQAIPxB,OAAOyB,gCACTzB,OAAOC,KAAO,IAAIyB,IAAK1B,OAAOyB,mBACxBzB,OAAOyB,SAASE,sCAEf3B,OAAOC,KACdD,OAAOC,KAAO,IAAIyB,IAAK1B,OAAOC,KAAK2B,iBAGnC5B,OAAO6B,MAAM,oVAKT5B,EAAOD,OAAOC,cAEGA,EAAK6B,IAAIC,4BAA1BC,SACNhE,KAAKiE,SAAS,CAAE/D,QAAS8D,EAAS,cAEV/B,EAAK6B,IAAII,IAAIC,kBAA/BC,WACAC,EAAcC,EAAcC,SAASH,4BAEnClB,EAAgBjB,EAAK6B,IAAIU,SAASF,EAAcG,IAAKJ,EAAYK,SACvE1E,KAAKiE,SAAS,CAAEf,4BACQA,EAAcyB,QAAQxB,YAAYH,eAApDG,SACNnD,KAAKiE,SAAS,CAAEd,cAEPyB,EAAI,eAAGA,GAAKzB,qCACAD,EAAcyB,QAAQhD,MAAMiD,GAAG5B,eAA5CnB,SACN7B,KAAKiE,SAAS,CACZtC,MAAK,GAAArB,OAAAsC,OAAAiC,EAAA,EAAAjC,CAAM5C,KAAKiD,MAAMtB,OAAjB,CAAwBE,cAHD+C,4BAOhC5E,KAAKiE,SAAS,CACZtC,MAAO3B,KAAKiD,MAAMtB,MAAMmD,KAAK,SAACrF,EAAEsF,GAAH,OAASA,EAAE3C,UAAY3C,EAAE2C,cAExDpC,KAAKiE,SAAS,CAAEb,SAAS,4BAEzBpB,OAAO6B,MAAM,kMAIN3C,GAAS,IAAA8D,EAAAhF,KAClBA,KAAKiE,SAAS,CAAEb,SAAS,IACzBpD,KAAKiD,MAAMC,cAAcyB,QAAQtD,WAAWH,GAAS+D,KAAK,CAAEC,KAAMlF,KAAKiD,MAAM/C,UAC5EiF,KAAK,UAAW,SAACC,GAChBJ,EAAKf,SAAS,CAAEb,SAAS,sCAIrBrD,EAAIqC,GAAW,IAAAiD,EAAArF,KACrBA,KAAKiE,SAAS,CAAEb,SAAS,IACzBpD,KAAKiD,MAAMC,cAAcyB,QAAQjC,QAAQ3C,GAAIkF,KAAK,CAAEC,KAAMlF,KAAKiD,MAAM/C,QAASkB,MAAOgB,IACpF+C,KAAK,UAAW,SAACC,GAChBC,EAAKpB,SAAS,CAAEb,SAAS,wDAmB3B,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4F,EAAD,CAAQpF,QAASF,KAAKiD,MAAM/C,UAC1BF,KAAKiD,MAAMG,QACT5D,EAAAC,EAAAC,cAAA,OAAKK,GAAG,SAASJ,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,wBAC9CF,EAAAC,EAAAC,cAAC6F,EAAD,CACE5D,MAAO3B,KAAKiD,MAAMtB,MAClBN,WAAYrB,KAAKqB,WACjBqB,QAAS1C,KAAK0C,kBAzFVjC,aCIE+E,QACW,cAA7BxD,OAAOyD,SAASC,UAEe,UAA7B1D,OAAOyD,SAASC,UAEhB1D,OAAOyD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.622d3b64.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"http://www.dappuniversity.com/bootcamp\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Dapp University\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            { this.props.account\n              ? <img\n                className='ml-2'\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n              />\n              : <span></span>\n            }\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n                <form onSubmit={(event) => {\n                  event.preventDefault()\n                  const content = this.postContent.value\n                  this.props.createPost(content)\n                }}>\n                <div className=\"form-group mr-sm-2\">\n                  <input\n                    id=\"postContent\"\n                    type=\"text\"\n                    ref={(input) => { this.postContent = input }}\n                    className=\"form-control\"\n                    placeholder=\"What's on your mind?\"\n                    required />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Share</button>\n              </form>\n              <p>&nbsp;</p>\n              { this.props.posts.map((post, key) => {\n                return(\n                  <div className=\"card mb-4\" key={key} >\n                    <div className=\"card-header\">\n                      <img\n                        className='mr-2'\n                        width='30'\n                        height='30'\n                        src={`data:image/png;base64,${new Identicon(post.author, 30).toString()}`}\n                      />\n                      <small className=\"text-muted\">{post.author}</small>\n                    </div>\n                    <ul id=\"postList\" className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                        <p>{post.content}</p>\n                      </li>\n                      <li key={key} className=\"list-group-item py-2\">\n                        <small className=\"float-left mt-1 text-muted\">\n                          TIPS: {window.web3.utils.fromWei(post.tipAmount.toString(), 'Ether')} ETH\n                        </small>\n                        <button\n                          className=\"btn btn-link btn-sm float-right pt-0\"\n                          name={post.id}\n                          onClick={(event) => {\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\n                            console.log(event.target.name, tipAmount)\n                            this.props.tipPost(event.target.name, tipAmount)\n                          }}\n                        >\n                          TIP 0.1 ETH\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                )\n              })}\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport SocialNetwork from '../abis/SocialNetwork.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = SocialNetwork.networks[networkId]\n    if(networkData) {\n      const socialNetwork = web3.eth.Contract(SocialNetwork.abi, networkData.address)\n      this.setState({ socialNetwork })\n      const postCount = await socialNetwork.methods.postCount().call()\n      this.setState({ postCount })\n      // Load Posts\n      for (var i = 1; i <= postCount; i++) {\n        const post = await socialNetwork.methods.posts(i).call()\n        this.setState({\n          posts: [...this.state.posts, post]\n        })\n      }\n      // Sort posts. Show highest tipped posts first\n      this.setState({\n        posts: this.state.posts.sort((a,b) => b.tipAmount - a.tipAmount )\n      })\n      this.setState({ loading: false})\n    } else {\n      window.alert('SocialNetwork contract not deployed to detected network.')\n    }\n  }\n\n  createPost(content) {\n    this.setState({ loading: true })\n    this.state.socialNetwork.methods.createPost(content).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  tipPost(id, tipAmount) {\n    this.setState({ loading: true })\n    this.state.socialNetwork.methods.tipPost(id).send({ from: this.state.account, value: tipAmount })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      loading: true\n    }\n\n    this.createPost = this.createPost.bind(this)\n    this.tipPost = this.tipPost.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        { this.state.loading\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main\n              posts={this.state.posts}\n              createPost={this.createPost}\n              tipPost={this.tipPost}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}